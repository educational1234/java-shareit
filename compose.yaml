services:
  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=shareit
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://dbuser:12345@db:5432/shareit -v ON_ERROR_STOP=1 <<EOSQL
        CREATE TABLE IF NOT EXISTS users (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          name VARCHAR(255) NOT NULL,
          email VARCHAR(512) NOT NULL UNIQUE
        );
        CREATE TABLE IF NOT EXISTS items (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          name VARCHAR(255) NOT NULL,
          description VARCHAR(1024) NOT NULL,
          available BOOLEAN NOT NULL,
          owner_id BIGINT NOT NULL,
          request_id BIGINT,
          CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users(id)
        );
        CREATE TABLE IF NOT EXISTS bookings (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          start_date TIMESTAMP NOT NULL,
          end_date TIMESTAMP NOT NULL,
          item_id BIGINT NOT NULL,
          booker_id BIGINT NOT NULL,
          status VARCHAR(50) NOT NULL,
          CONSTRAINT fk_booking_item FOREIGN KEY (item_id) REFERENCES items(id),
          CONSTRAINT fk_booking_user FOREIGN KEY (booker_id) REFERENCES users(id)
        );
        CREATE TABLE IF NOT EXISTS comments (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          text VARCHAR(1024) NOT NULL,
          item_id BIGINT NOT NULL,
          author_id BIGINT NOT NULL,
          created TIMESTAMP NOT NULL,
          CONSTRAINT fk_comment_item FOREIGN KEY (item_id) REFERENCES items(id),
          CONSTRAINT fk_comment_user FOREIGN KEY (author_id) REFERENCES users(id)
        );
        EOSQL
